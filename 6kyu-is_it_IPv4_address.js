String.prototype.ipv4Address=function(){
  if(!this) return false
    
  let k = this.split('.')
  return(k.length == 4) ? k.every((n) => {return (n >= 0 && n < 256 && n == (+n).toString())}) : false
}

// String에 있는 값이 ipv4에 부합하는지를 검사하는 문제
// prototype을 다룬경험이 별로 없어서 처음에는 인자를 어떻게 불러올지 고민함.
// 공부하던 프로젝트에서 prototype을 사용한 기억이 있어서 찾아보고 this로 부른다는 것을 알게됨.
// prototype도 공부해야게따 ...


String.prototype.ipv4Address = function() {
  return /^(([1-9]?\d|1\d\d|2[0-4]\d|25[0-5])(\.(?!$)|$)){4}$/.test(this);
};

// clever답안
// 이 문제는 이렇게 푸는걸 물으려고 낸 문제같다 ...
// 정규식에서 맨앞에 붙는 ^는 시작을 나타내고 마지막의 $는 끝을 나타낸다.
// | 는 or, ?는 앞의 패턴이 0 또는 1회 반복
// 앞의 괄호부터 정리해보면 맨앞에 1에서 9사이의 숫자가 나오고 한자리 정수가 나오는 것( [1-9]?\d ) 
// 또는 1로 시작하는 3자리 정수( 1\d\d ), 또는 백의자리는 2, 십의자리는 0에서 4, 일의자리는 아무 숫자나 나오는 것
// 그리고 마지막으로 250부터 255까지의 숫자가 나오는지를 검사하는 식
// 뒤에 괄호에서 (\.(?!$)) 는 입력의 끝이 뒤따라오지않는 .에 매치하거나 입력의 끝에 매치한다.
// 따라서 총 정리해보면, 원하는 숫자들 뒤에 입력의 끝이 아닌 . 이 붙거나 원하는 숫자들로 끝나는게 4개가 이어져있다면
// test는 true를 리턴, 아니라면 false를 리턴하는 정규식이다.